////////////////////////////////
//      MEDIA QUERIES
////////////////////////////////

// Set our view widths, i.e. breakpoints.
$phone-width: 660px;
$tablet-width: 940px;
$normal-width: 1400px;

// Set up media queries.
@mixin respond-to( $media ) {

  // If inside of a view.
  @if $media == phone {
    @media only screen and (max-width: $phone-width) { @content; }
  }
  @else if $media == tablet {
    @media only screen and (min-width: $phone-width + 1) and (max-width: $tablet-width - 1) { @content; }
  }
  @else if $media == normal {
    @media only screen and (min-width: $tablet-width + 1) and (max-width: $normal-width - 1) { @content; }
  }
  @else if $media == wide {
    @media only screen and (min-width: $normal-width) { @content; }
  }

  // If inside of a view, or smaller views.
  @else if $media == phone-and-down {
    @media only screen and (max-width: $phone-width) { @content; }
  }
  @else if $media == tablet-and-down {
    @media only screen and (max-width: $tablet-width - 1) { @content; }
  }
  @else if $media == normal-and-down {
    @media only screen and (max-width: $normal-width - 1) { @content; }
  }
  @else if $media == wide-and-down {
    @media only screen and (min-width: 0) { @content; }
  }

  // If inside of a view, or wider views.
  @else if $media == phone-and-up {
    @media only screen and (min-width: 0) { @content; }
  }
  @else if $media == tablet-and-up {
    @media only screen and (min-width: $phone-width) { @content; }
  }
  @else if $media == normal-and-up {
    @media only screen and (min-width: $tablet-width) { @content; }
  }
  @else if $media == wide-and-up {
    @media only screen and (min-width: $normal-width) { @content; }
  }

}

// Log our view state to the DOM, so JS has some visibility into it.
body:after {
  display: none;
  @include respond-to( phone ) {
    content: "phone";
  }
  @include respond-to( tablet ) {
    content: "tablet";
  }
  @include respond-to( normal ) {
    content: "normal";
  }
  @include respond-to( wide ) {
    content: "wide";
  }
}

// $Viewport
//===============================================================================

// http://dev.w3.org/csswg/css-device-adapt/
// http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/
// for IE10 Snap Mode on Metro
@-ms-viewport {
    width: device-width;
}
@viewport {
    width: device-width;
}
